version: '3.1'
services:
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"

  #  redisearch:
  #    image: redislabs/redisearch:latest
  #    command: ["redis-server", "--loadmodule", "/usr/lib/redis/modules/redisearch.so"]
  #    ports:
  #      - "6380:6379"
  #    depends_on:
  #      - redis
  #
  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
  #
  #  mongo:
  #    image: mongo
  #    ports:
  #      - "27017:27017"
  #    environment:
  #      MONGO_INITDB_ROOT_USERNAME: root
  #      MONGO_INITDB_ROOT_PASSWORD: 123456
  #      MONGO_INITDB_DATABASE: mydatabase
  #
  #
  #  elasticsearch:
  #    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
  #    environment:
  #      - discovery.type=single-node
  #      - xpack.security.enabled=false
  #    ports:
  #      - "9200:9200"
  #
  #  kibana:
  #    image: docker.elastic.co/kibana/kibana:7.10.0
  #    environment:
  #      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #    ports:
  #      - "5601:5601"
  #    depends_on:
  #      - elasticsearch
  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - "3306:3306"
    volumes:
      - ./data:/var/lib/mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  akhq:
    image: tchiotludo/akhq:dev
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka-cluster:
              properties:
                bootstrap.servers: "kafka:29092"
